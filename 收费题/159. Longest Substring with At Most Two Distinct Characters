Given a string s , find the length of the longest substring t  that contains at most 2 distinct characters.

Example 1:

Input: "eceba"
Output: 3
Explanation: t is "ece" which its length is 3.
Example 2:

Input: "ccaabbb"
Output: 5
Explanation: t is "aabbb" which its length is 5.



class Solution:
    def lengthOfLongestSubstringTwoDistinct(self, s: str) -> int:
        hash = {}
        left, right = 0, 0
        max_length = 0
        while right < len(s):
            if s[right] not in hash and len(hash) == 2:
                front_pos = min(hash.values())
                left = front_pos + 1
                hash.pop(s[front_pos])
            hash[s[right]] = right
            max_length = max(max_length, right-left+1)
            right += 1
        return max_length
